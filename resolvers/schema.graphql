type Mutation {
  bookService(input: BookServiceInput!): BookingResponse!
}

input BookServiceInput {
  sessionID: String
  servicePlan: ServicePlanInput!
  bookingRequest: BookingRequestInput!
  selectedProviderID: ID
  confirmedSlot: TimeSlotInput
  userID: ID!
}

input ServicePlanInput {
  service: String!
  bookingFor: String!
  urgency: String!  # "Now" or "Later"
  location: String!
  latitude: Float!
  longitude: Float!
  duration: Int!
}

input BookingRequestInput {
  date: String!          # YYYY-MM-DD
  duration: Int!         # Duration in minutes
  units: Int!
}

input TimeSlotInput {
  start: Int!  # Minutes from midnight
  end: Int!
  label: String!
}

type Provider {
  id: ID!
  name: String!
  rating: Float!
  capacity: Int!
  location: String!
  latitude: Float!
  longitude: Float!
  pricingModel: String!
  baseRate: Float!
  # Additional fields as needed.
}

type Booking {
  id: ID!
  provider: Provider!
  userId: ID!
  date: String!
  startMinute: Int!
  duration: Int!
  units: Int!
  totalPrice: Float!
  status: String!
  createdAt: String!
}

# This is our unified response type for the booking process.
type BookingResponse {
  sessionID: String          # Present when the booking process is in progress.
  providers: [Provider!]     # The ranked list of matched providers (from the matching phase).
  availability: [TimeSlot!]  # Availability slots for the selected provider.
  booking: Booking           # Final confirmed booking, if complete.
}
